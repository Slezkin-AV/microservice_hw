apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "srv2.fullname" . }}
  labels:
    {{- include "srv2.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "srv2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "srv2.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "srv2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          envFrom:
            - configMapRef:
                name: {{ include "srv2.fullname" . }}-config
          env:
              - name: spring.datasource.username1
                valueFrom:
                  secretKeyRef:
                    name: {{ include "srv2.fullname" . }}-secret
                    key: username
              - name: spring.datasource.password1
                valueFrom:
                  secretKeyRef:
                    name: {{ include "srv2.fullname" . }}-secret
                    key: password
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        - name: {{ .Chart.Name }}-{{ .Values.postgress.pg_name }}
          image: "{{ .Values.postgress.image }}"
          envFrom:
            - configMapRef:
                name: {{ include "srv2.fullname" . }}-config
          env:
              - name: POSTGRES_USER1
                valueFrom:
                  secretKeyRef:
                    name: {{ include "srv2.fullname" . }}-secret
                    key: POSTGRES_USER
              - name: POSTGRES_PASSWORD1
                valueFrom:
                  secretKeyRef:
                    name: {{ include "srv2.fullname" . }}-secret
                    key: POSTGRES_PASSWORD
          ports:
            - name: http
              containerPort: {{ .Values.postgress.pg_port }}
              protocol: TCP
        - name: adminer
          image: "adminer"
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP