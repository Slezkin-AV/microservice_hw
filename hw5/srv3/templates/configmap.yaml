apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "srv2.fullname" . }}-config
  labels:
    {{- include "srv2.labels" . | nindent 4 }}
data:
  POSTGRES_DB: {{ .Values.postgress.postgres_db }}
  POSTGRES_USER: {{ .Values.postgress.postgres_user }}
  POSTGRES_PASSWORD: {{ .Values.postgress.postgres_password }}
  PGDATA: {{ .Values.postgress.pgdata }}

  spring.datasource.url: {{ .Values.spring.datasource_url }}
  spring.datasource.username: {{ .Values.postgress.postgres_user }}
  spring.datasource.password: {{ .Values.postgress.postgres_password }}
  jakarta.persistence.jdbc.url: {{ .Values.spring.jdbc_url }}

  # This will drop any table in the database and create new ones base on the models
  spring.jpa.hibernate.ddl-auto: create-drop
  # update
  # none
  global.scrape_interval: "5s"
    # By default, scrape targets every 15 seconds.

    # Attach these labels to any time series or alerts when communicating with
    # external systems (federation, remote storage, Alertmanager).
  external_labels.monitor: 'codelab-monitor'

  # A scrape configuration containing exactly one endpoint to scrape:
  # Here it's Prometheus itself.
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  prometheus.yml: |
    scrape_configs:
      - job_name: 'srv2'
        scrape_interval: 5s
        metrics_path: '/actuator/prometheus'
        static_configs:
          - targets: [ 'localhost:8000' ]